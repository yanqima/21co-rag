version: '3.8'

services:
  # RAG API Service
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: rag-api
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - QDRANT_HOST=qdrant
      - REDIS_HOST=redis
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    depends_on:
      - qdrant
      - redis
    networks:
      - rag-network
    volumes:
      - ../sample_data:/app/sample_data
    restart: unless-stopped

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: rag-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__LOG_LEVEL=INFO
    networks:
      - rag-network
    restart: unless-stopped

  # Redis for async job queue
  redis:
    image: redis:7-alpine
    container_name: rag-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rag-network
    restart: unless-stopped

  # Streamlit UI (optional)
  streamlit:
    build:
      context: ..
      dockerfile: docker/Dockerfile.streamlit
    container_name: rag-streamlit
    ports:
      - "8501:8501"
    environment:
      - API_URL=http://api:8000
    depends_on:
      - api
    networks:
      - rag-network
    restart: unless-stopped

networks:
  rag-network:
    driver: bridge

volumes:
  qdrant_data:
  redis_data: